version: '3.7'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
    ipam:
      config:
        - subnet: "192.168.210.0/24"

volumes:
  data-tutor:

services:
  nginx:
    image: adianti-tutor/nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      backend:
        ipv4_address: 192.168.210.13
        aliases:
          - ${APP_HOST}

  php-fpm:
    image: adianti-tutor/php-fpm
    build:
      context: .
      dockerfile: ./php-fpm/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      backend:
        ipv4_address: 192.168.210.12

  php-cli:
    image: adianti-tutor/php-cli
    build:
      context: .
      dockerfile: ./php-cli/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${WORKSPACE_HOST_SSH_PORT}:22"
    networks:
      backend:
        ipv4_address: 192.168.210.11

  mysql:
    image: adianti-tutor/mysql
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    restart: always
    volumes:
      - data-tutor:/var/lib/mysql
      - ./mysql/init_data:/docker-entrypoint-initdb.d
    networks:
      backend:
        ipv4_address: 192.168.210.10
    ports:
      - ${MYSQL_HOST_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
